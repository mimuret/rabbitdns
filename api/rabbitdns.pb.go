// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rabbitdns.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResourceResponse struct {
	Resource             string   `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=Result,proto3" json:"Result,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,4,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceResponse) Reset()         { *m = ResourceResponse{} }
func (m *ResourceResponse) String() string { return proto.CompactTextString(m) }
func (*ResourceResponse) ProtoMessage()    {}
func (*ResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{0}
}
func (m *ResourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceResponse.Unmarshal(m, b)
}
func (m *ResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceResponse.Marshal(b, m, deterministic)
}
func (m *ResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceResponse.Merge(m, src)
}
func (m *ResourceResponse) XXX_Size() int {
	return xxx_messageInfo_ResourceResponse.Size(m)
}
func (m *ResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceResponse proto.InternalMessageInfo

func (m *ResourceResponse) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *ResourceResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResourceResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ResourceResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type ResourcesResponses struct {
	Response             []*ResourceResponse `protobuf:"bytes,1,rep,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ResourcesResponses) Reset()         { *m = ResourcesResponses{} }
func (m *ResourcesResponses) String() string { return proto.CompactTextString(m) }
func (*ResourcesResponses) ProtoMessage()    {}
func (*ResourcesResponses) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{1}
}
func (m *ResourcesResponses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesResponses.Unmarshal(m, b)
}
func (m *ResourcesResponses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesResponses.Marshal(b, m, deterministic)
}
func (m *ResourcesResponses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesResponses.Merge(m, src)
}
func (m *ResourcesResponses) XXX_Size() int {
	return xxx_messageInfo_ResourcesResponses.Size(m)
}
func (m *ResourcesResponses) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesResponses.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesResponses proto.InternalMessageInfo

func (m *ResourcesResponses) GetResponse() []*ResourceResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type GetZonesRequest struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetZonesRequest) Reset()         { *m = GetZonesRequest{} }
func (m *GetZonesRequest) String() string { return proto.CompactTextString(m) }
func (*GetZonesRequest) ProtoMessage()    {}
func (*GetZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{2}
}
func (m *GetZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetZonesRequest.Unmarshal(m, b)
}
func (m *GetZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetZonesRequest.Marshal(b, m, deterministic)
}
func (m *GetZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetZonesRequest.Merge(m, src)
}
func (m *GetZonesRequest) XXX_Size() int {
	return xxx_messageInfo_GetZonesRequest.Size(m)
}
func (m *GetZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetZonesRequest proto.InternalMessageInfo

func (m *GetZonesRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type GetZonesResponse struct {
	Zones                []*Zone  `protobuf:"bytes,1,rep,name=zones,proto3" json:"zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetZonesResponse) Reset()         { *m = GetZonesResponse{} }
func (m *GetZonesResponse) String() string { return proto.CompactTextString(m) }
func (*GetZonesResponse) ProtoMessage()    {}
func (*GetZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{3}
}
func (m *GetZonesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetZonesResponse.Unmarshal(m, b)
}
func (m *GetZonesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetZonesResponse.Marshal(b, m, deterministic)
}
func (m *GetZonesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetZonesResponse.Merge(m, src)
}
func (m *GetZonesResponse) XXX_Size() int {
	return xxx_messageInfo_GetZonesResponse.Size(m)
}
func (m *GetZonesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetZonesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetZonesResponse proto.InternalMessageInfo

func (m *GetZonesResponse) GetZones() []*Zone {
	if m != nil {
		return m.Zones
	}
	return nil
}

type CreateZonesRequest struct {
	Service              *Zone    `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateZonesRequest) Reset()         { *m = CreateZonesRequest{} }
func (m *CreateZonesRequest) String() string { return proto.CompactTextString(m) }
func (*CreateZonesRequest) ProtoMessage()    {}
func (*CreateZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{4}
}
func (m *CreateZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateZonesRequest.Unmarshal(m, b)
}
func (m *CreateZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateZonesRequest.Marshal(b, m, deterministic)
}
func (m *CreateZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateZonesRequest.Merge(m, src)
}
func (m *CreateZonesRequest) XXX_Size() int {
	return xxx_messageInfo_CreateZonesRequest.Size(m)
}
func (m *CreateZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateZonesRequest proto.InternalMessageInfo

func (m *CreateZonesRequest) GetService() *Zone {
	if m != nil {
		return m.Service
	}
	return nil
}

type DeleteZonesRequest struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteZonesRequest) Reset()         { *m = DeleteZonesRequest{} }
func (m *DeleteZonesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteZonesRequest) ProtoMessage()    {}
func (*DeleteZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{5}
}
func (m *DeleteZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteZonesRequest.Unmarshal(m, b)
}
func (m *DeleteZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteZonesRequest.Marshal(b, m, deterministic)
}
func (m *DeleteZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteZonesRequest.Merge(m, src)
}
func (m *DeleteZonesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteZonesRequest.Size(m)
}
func (m *DeleteZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteZonesRequest proto.InternalMessageInfo

func (m *DeleteZonesRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type GetServiceRequest struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceRequest) Reset()         { *m = GetServiceRequest{} }
func (m *GetServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceRequest) ProtoMessage()    {}
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{6}
}
func (m *GetServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceRequest.Unmarshal(m, b)
}
func (m *GetServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceRequest.Merge(m, src)
}
func (m *GetServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceRequest.Size(m)
}
func (m *GetServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceRequest proto.InternalMessageInfo

func (m *GetServiceRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type GetServicesResponse struct {
	Services             []*Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetServicesResponse) Reset()         { *m = GetServicesResponse{} }
func (m *GetServicesResponse) String() string { return proto.CompactTextString(m) }
func (*GetServicesResponse) ProtoMessage()    {}
func (*GetServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{7}
}
func (m *GetServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesResponse.Unmarshal(m, b)
}
func (m *GetServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesResponse.Marshal(b, m, deterministic)
}
func (m *GetServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesResponse.Merge(m, src)
}
func (m *GetServicesResponse) XXX_Size() int {
	return xxx_messageInfo_GetServicesResponse.Size(m)
}
func (m *GetServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesResponse proto.InternalMessageInfo

func (m *GetServicesResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type CreateServicesRequest struct {
	Service              []*Service `protobuf:"bytes,1,rep,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateServicesRequest) Reset()         { *m = CreateServicesRequest{} }
func (m *CreateServicesRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServicesRequest) ProtoMessage()    {}
func (*CreateServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{8}
}
func (m *CreateServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServicesRequest.Unmarshal(m, b)
}
func (m *CreateServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServicesRequest.Marshal(b, m, deterministic)
}
func (m *CreateServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServicesRequest.Merge(m, src)
}
func (m *CreateServicesRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServicesRequest.Size(m)
}
func (m *CreateServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServicesRequest proto.InternalMessageInfo

func (m *CreateServicesRequest) GetService() []*Service {
	if m != nil {
		return m.Service
	}
	return nil
}

type DeleteServiceRequest struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteServiceRequest) Reset()         { *m = DeleteServiceRequest{} }
func (m *DeleteServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteServiceRequest) ProtoMessage()    {}
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{9}
}
func (m *DeleteServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteServiceRequest.Unmarshal(m, b)
}
func (m *DeleteServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteServiceRequest.Merge(m, src)
}
func (m *DeleteServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteServiceRequest.Size(m)
}
func (m *DeleteServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteServiceRequest proto.InternalMessageInfo

func (m *DeleteServiceRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type GetMonitorsRequest struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMonitorsRequest) Reset()         { *m = GetMonitorsRequest{} }
func (m *GetMonitorsRequest) String() string { return proto.CompactTextString(m) }
func (*GetMonitorsRequest) ProtoMessage()    {}
func (*GetMonitorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{10}
}
func (m *GetMonitorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMonitorsRequest.Unmarshal(m, b)
}
func (m *GetMonitorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMonitorsRequest.Marshal(b, m, deterministic)
}
func (m *GetMonitorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMonitorsRequest.Merge(m, src)
}
func (m *GetMonitorsRequest) XXX_Size() int {
	return xxx_messageInfo_GetMonitorsRequest.Size(m)
}
func (m *GetMonitorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMonitorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMonitorsRequest proto.InternalMessageInfo

func (m *GetMonitorsRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type GetMonitorsResponse struct {
	Monitors             []*Monitor `protobuf:"bytes,1,rep,name=monitors,proto3" json:"monitors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetMonitorsResponse) Reset()         { *m = GetMonitorsResponse{} }
func (m *GetMonitorsResponse) String() string { return proto.CompactTextString(m) }
func (*GetMonitorsResponse) ProtoMessage()    {}
func (*GetMonitorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{11}
}
func (m *GetMonitorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMonitorsResponse.Unmarshal(m, b)
}
func (m *GetMonitorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMonitorsResponse.Marshal(b, m, deterministic)
}
func (m *GetMonitorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMonitorsResponse.Merge(m, src)
}
func (m *GetMonitorsResponse) XXX_Size() int {
	return xxx_messageInfo_GetMonitorsResponse.Size(m)
}
func (m *GetMonitorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMonitorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMonitorsResponse proto.InternalMessageInfo

func (m *GetMonitorsResponse) GetMonitors() []*Monitor {
	if m != nil {
		return m.Monitors
	}
	return nil
}

type CreateMonitorsRequest struct {
	Service              []*Service `protobuf:"bytes,1,rep,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateMonitorsRequest) Reset()         { *m = CreateMonitorsRequest{} }
func (m *CreateMonitorsRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMonitorsRequest) ProtoMessage()    {}
func (*CreateMonitorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{12}
}
func (m *CreateMonitorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMonitorsRequest.Unmarshal(m, b)
}
func (m *CreateMonitorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMonitorsRequest.Marshal(b, m, deterministic)
}
func (m *CreateMonitorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMonitorsRequest.Merge(m, src)
}
func (m *CreateMonitorsRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMonitorsRequest.Size(m)
}
func (m *CreateMonitorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMonitorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMonitorsRequest proto.InternalMessageInfo

func (m *CreateMonitorsRequest) GetService() []*Service {
	if m != nil {
		return m.Service
	}
	return nil
}

type DeleteMonitorRequest struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMonitorRequest) Reset()         { *m = DeleteMonitorRequest{} }
func (m *DeleteMonitorRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMonitorRequest) ProtoMessage()    {}
func (*DeleteMonitorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{13}
}
func (m *DeleteMonitorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMonitorRequest.Unmarshal(m, b)
}
func (m *DeleteMonitorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMonitorRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMonitorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMonitorRequest.Merge(m, src)
}
func (m *DeleteMonitorRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMonitorRequest.Size(m)
}
func (m *DeleteMonitorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMonitorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMonitorRequest proto.InternalMessageInfo

func (m *DeleteMonitorRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type Zone struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Zone) Reset()         { *m = Zone{} }
func (m *Zone) String() string { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()    {}
func (*Zone) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{14}
}
func (m *Zone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Zone.Unmarshal(m, b)
}
func (m *Zone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Zone.Marshal(b, m, deterministic)
}
func (m *Zone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Zone.Merge(m, src)
}
func (m *Zone) XXX_Size() int {
	return xxx_messageInfo_Zone.Size(m)
}
func (m *Zone) XXX_DiscardUnknown() {
	xxx_messageInfo_Zone.DiscardUnknown(m)
}

var xxx_messageInfo_Zone proto.InternalMessageInfo

func (m *Zone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{15}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Monitor struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Monitor) Reset()         { *m = Monitor{} }
func (m *Monitor) String() string { return proto.CompactTextString(m) }
func (*Monitor) ProtoMessage()    {}
func (*Monitor) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b9b0eb52f05c6a, []int{16}
}
func (m *Monitor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Monitor.Unmarshal(m, b)
}
func (m *Monitor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Monitor.Marshal(b, m, deterministic)
}
func (m *Monitor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Monitor.Merge(m, src)
}
func (m *Monitor) XXX_Size() int {
	return xxx_messageInfo_Monitor.Size(m)
}
func (m *Monitor) XXX_DiscardUnknown() {
	xxx_messageInfo_Monitor.DiscardUnknown(m)
}

var xxx_messageInfo_Monitor proto.InternalMessageInfo

func (m *Monitor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ResourceResponse)(nil), "api.ResourceResponse")
	proto.RegisterType((*ResourcesResponses)(nil), "api.ResourcesResponses")
	proto.RegisterType((*GetZonesRequest)(nil), "api.GetZonesRequest")
	proto.RegisterType((*GetZonesResponse)(nil), "api.GetZonesResponse")
	proto.RegisterType((*CreateZonesRequest)(nil), "api.CreateZonesRequest")
	proto.RegisterType((*DeleteZonesRequest)(nil), "api.DeleteZonesRequest")
	proto.RegisterType((*GetServiceRequest)(nil), "api.GetServiceRequest")
	proto.RegisterType((*GetServicesResponse)(nil), "api.GetServicesResponse")
	proto.RegisterType((*CreateServicesRequest)(nil), "api.CreateServicesRequest")
	proto.RegisterType((*DeleteServiceRequest)(nil), "api.DeleteServiceRequest")
	proto.RegisterType((*GetMonitorsRequest)(nil), "api.GetMonitorsRequest")
	proto.RegisterType((*GetMonitorsResponse)(nil), "api.GetMonitorsResponse")
	proto.RegisterType((*CreateMonitorsRequest)(nil), "api.CreateMonitorsRequest")
	proto.RegisterType((*DeleteMonitorRequest)(nil), "api.DeleteMonitorRequest")
	proto.RegisterType((*Zone)(nil), "api.Zone")
	proto.RegisterType((*Service)(nil), "api.Service")
	proto.RegisterType((*Monitor)(nil), "api.Monitor")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RabbitDNSClient is the client API for RabbitDNS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RabbitDNSClient interface {
	GetZones(ctx context.Context, in *GetZonesRequest, opts ...grpc.CallOption) (*GetZonesResponse, error)
	DeleteZones(ctx context.Context, in *DeleteZonesRequest, opts ...grpc.CallOption) (*ResourcesResponses, error)
	CreateZones(ctx context.Context, in *CreateZonesRequest, opts ...grpc.CallOption) (*ResourcesResponses, error)
	GetMonitors(ctx context.Context, in *GetMonitorsRequest, opts ...grpc.CallOption) (*GetMonitorsResponse, error)
	CreateMonitors(ctx context.Context, in *CreateMonitorsRequest, opts ...grpc.CallOption) (*ResourcesResponses, error)
	DeleteMonitors(ctx context.Context, in *DeleteMonitorRequest, opts ...grpc.CallOption) (*ResourcesResponses, error)
	GetServices(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServicesResponse, error)
	CreateServices(ctx context.Context, in *CreateServicesRequest, opts ...grpc.CallOption) (*ResourcesResponses, error)
	DeleteServices(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*ResourcesResponses, error)
}

type rabbitDNSClient struct {
	cc *grpc.ClientConn
}

func NewRabbitDNSClient(cc *grpc.ClientConn) RabbitDNSClient {
	return &rabbitDNSClient{cc}
}

func (c *rabbitDNSClient) GetZones(ctx context.Context, in *GetZonesRequest, opts ...grpc.CallOption) (*GetZonesResponse, error) {
	out := new(GetZonesResponse)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/GetZones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rabbitDNSClient) DeleteZones(ctx context.Context, in *DeleteZonesRequest, opts ...grpc.CallOption) (*ResourcesResponses, error) {
	out := new(ResourcesResponses)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/DeleteZones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rabbitDNSClient) CreateZones(ctx context.Context, in *CreateZonesRequest, opts ...grpc.CallOption) (*ResourcesResponses, error) {
	out := new(ResourcesResponses)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/CreateZones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rabbitDNSClient) GetMonitors(ctx context.Context, in *GetMonitorsRequest, opts ...grpc.CallOption) (*GetMonitorsResponse, error) {
	out := new(GetMonitorsResponse)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/GetMonitors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rabbitDNSClient) CreateMonitors(ctx context.Context, in *CreateMonitorsRequest, opts ...grpc.CallOption) (*ResourcesResponses, error) {
	out := new(ResourcesResponses)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/CreateMonitors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rabbitDNSClient) DeleteMonitors(ctx context.Context, in *DeleteMonitorRequest, opts ...grpc.CallOption) (*ResourcesResponses, error) {
	out := new(ResourcesResponses)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/DeleteMonitors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rabbitDNSClient) GetServices(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServicesResponse, error) {
	out := new(GetServicesResponse)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/GetServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rabbitDNSClient) CreateServices(ctx context.Context, in *CreateServicesRequest, opts ...grpc.CallOption) (*ResourcesResponses, error) {
	out := new(ResourcesResponses)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/CreateServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rabbitDNSClient) DeleteServices(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*ResourcesResponses, error) {
	out := new(ResourcesResponses)
	err := c.cc.Invoke(ctx, "/api.RabbitDNS/DeleteServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RabbitDNSServer is the server API for RabbitDNS service.
type RabbitDNSServer interface {
	GetZones(context.Context, *GetZonesRequest) (*GetZonesResponse, error)
	DeleteZones(context.Context, *DeleteZonesRequest) (*ResourcesResponses, error)
	CreateZones(context.Context, *CreateZonesRequest) (*ResourcesResponses, error)
	GetMonitors(context.Context, *GetMonitorsRequest) (*GetMonitorsResponse, error)
	CreateMonitors(context.Context, *CreateMonitorsRequest) (*ResourcesResponses, error)
	DeleteMonitors(context.Context, *DeleteMonitorRequest) (*ResourcesResponses, error)
	GetServices(context.Context, *GetServiceRequest) (*GetServicesResponse, error)
	CreateServices(context.Context, *CreateServicesRequest) (*ResourcesResponses, error)
	DeleteServices(context.Context, *DeleteServiceRequest) (*ResourcesResponses, error)
}

func RegisterRabbitDNSServer(s *grpc.Server, srv RabbitDNSServer) {
	s.RegisterService(&_RabbitDNS_serviceDesc, srv)
}

func _RabbitDNS_GetZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).GetZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/GetZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).GetZones(ctx, req.(*GetZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RabbitDNS_DeleteZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).DeleteZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/DeleteZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).DeleteZones(ctx, req.(*DeleteZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RabbitDNS_CreateZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).CreateZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/CreateZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).CreateZones(ctx, req.(*CreateZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RabbitDNS_GetMonitors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMonitorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).GetMonitors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/GetMonitors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).GetMonitors(ctx, req.(*GetMonitorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RabbitDNS_CreateMonitors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMonitorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).CreateMonitors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/CreateMonitors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).CreateMonitors(ctx, req.(*CreateMonitorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RabbitDNS_DeleteMonitors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMonitorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).DeleteMonitors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/DeleteMonitors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).DeleteMonitors(ctx, req.(*DeleteMonitorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RabbitDNS_GetServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).GetServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/GetServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).GetServices(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RabbitDNS_CreateServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).CreateServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/CreateServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).CreateServices(ctx, req.(*CreateServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RabbitDNS_DeleteServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitDNSServer).DeleteServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RabbitDNS/DeleteServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitDNSServer).DeleteServices(ctx, req.(*DeleteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RabbitDNS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.RabbitDNS",
	HandlerType: (*RabbitDNSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetZones",
			Handler:    _RabbitDNS_GetZones_Handler,
		},
		{
			MethodName: "DeleteZones",
			Handler:    _RabbitDNS_DeleteZones_Handler,
		},
		{
			MethodName: "CreateZones",
			Handler:    _RabbitDNS_CreateZones_Handler,
		},
		{
			MethodName: "GetMonitors",
			Handler:    _RabbitDNS_GetMonitors_Handler,
		},
		{
			MethodName: "CreateMonitors",
			Handler:    _RabbitDNS_CreateMonitors_Handler,
		},
		{
			MethodName: "DeleteMonitors",
			Handler:    _RabbitDNS_DeleteMonitors_Handler,
		},
		{
			MethodName: "GetServices",
			Handler:    _RabbitDNS_GetServices_Handler,
		},
		{
			MethodName: "CreateServices",
			Handler:    _RabbitDNS_CreateServices_Handler,
		},
		{
			MethodName: "DeleteServices",
			Handler:    _RabbitDNS_DeleteServices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rabbitdns.proto",
}

func init() { proto.RegisterFile("rabbitdns.proto", fileDescriptor_b1b9b0eb52f05c6a) }

var fileDescriptor_b1b9b0eb52f05c6a = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x24, 0xb4, 0xce, 0xa4, 0x6a, 0xcb, 0xd0, 0xb4, 0xc6, 0x08, 0x11, 0x19, 0x01, 0x16,
	0x87, 0x54, 0xb4, 0xa7, 0x9e, 0x2a, 0xa0, 0xe0, 0x53, 0x7b, 0xd8, 0xde, 0xb8, 0x39, 0x30, 0x44,
	0x96, 0x12, 0xaf, 0xd9, 0xdd, 0x20, 0xc1, 0x81, 0xbf, 0xe6, 0x8e, 0xbc, 0x5e, 0xdb, 0xeb, 0x75,
	0x9b, 0x96, 0x9b, 0x77, 0x66, 0xf6, 0xcd, 0x7b, 0x3b, 0xf3, 0x64, 0xd8, 0x13, 0xe9, 0x7c, 0x9e,
	0xa9, 0x6f, 0xb9, 0x9c, 0x15, 0x82, 0x2b, 0x8e, 0x83, 0xb4, 0xc8, 0xc2, 0x67, 0x0b, 0xce, 0x17,
	0x4b, 0x3a, 0xd6, 0xa1, 0xf9, 0xfa, 0xfb, 0x31, 0xad, 0x0a, 0xf5, 0xab, 0xaa, 0x88, 0xfe, 0xc0,
	0x3e, 0x23, 0xc9, 0xd7, 0xe2, 0x2b, 0x31, 0x92, 0x05, 0xcf, 0x25, 0x61, 0x08, 0xbe, 0x30, 0xb1,
	0xc0, 0x9b, 0x7a, 0xf1, 0x88, 0x35, 0x67, 0x44, 0x18, 0x5e, 0xa5, 0x2b, 0x0a, 0x1e, 0xea, 0xb8,
	0xfe, 0xc6, 0x43, 0xd8, 0x62, 0x24, 0xd7, 0x4b, 0x15, 0x0c, 0xa6, 0x5e, 0xec, 0x33, 0x73, 0xc2,
	0x08, 0x76, 0x3e, 0x09, 0xc1, 0xc5, 0x25, 0x49, 0x99, 0x2e, 0x28, 0x18, 0xea, 0x3b, 0x9d, 0x58,
	0x94, 0x00, 0xd6, 0xfd, 0x65, 0x4d, 0x40, 0xe2, 0x3b, 0xf0, 0xeb, 0x43, 0xe0, 0x4d, 0x07, 0xf1,
	0xf8, 0x64, 0x32, 0x4b, 0x8b, 0x6c, 0xe6, 0x52, 0x65, 0x4d, 0x59, 0xf4, 0x0a, 0xf6, 0x12, 0x52,
	0x5f, 0x78, 0x5e, 0xe2, 0xfc, 0x58, 0x93, 0x54, 0x25, 0xd7, 0xbc, 0xe4, 0x5a, 0x22, 0x8c, 0x98,
	0xfe, 0x8e, 0x4e, 0x61, 0xbf, 0x2d, 0x33, 0x7a, 0x5f, 0xc0, 0xa3, 0xdf, 0x65, 0xc0, 0xb4, 0x1a,
	0xe9, 0x56, 0x65, 0x09, 0xab, 0xe2, 0xd1, 0x19, 0xe0, 0x47, 0x41, 0xa9, 0xa2, 0x0e, 0xfc, 0x4b,
	0xd8, 0x96, 0x24, 0x7e, 0x66, 0xe6, 0x95, 0x3a, 0x17, 0xeb, 0x4c, 0x14, 0x03, 0x5e, 0xd0, 0x92,
	0x9c, 0xab, 0x37, 0x31, 0x7b, 0x03, 0x8f, 0x13, 0x52, 0xd7, 0xd5, 0xbd, 0x4d, 0x85, 0xe7, 0xf0,
	0xa4, 0x2d, 0x6c, 0x55, 0xc4, 0xe0, 0x9b, 0xa6, 0xb5, 0x90, 0x1d, 0xcd, 0xa7, 0x46, 0x6c, 0xb2,
	0xd1, 0x39, 0x4c, 0x2a, 0x39, 0x2d, 0x46, 0xd5, 0xed, 0xb5, 0xad, 0xa8, 0x8f, 0xd0, 0x88, 0x7a,
	0x0b, 0x07, 0x95, 0xa8, 0x7b, 0xb0, 0x8d, 0x01, 0x13, 0x52, 0x97, 0x3c, 0xcf, 0x14, 0x17, 0xf2,
	0x6e, 0x5d, 0x6d, 0x65, 0xab, 0x6b, 0x65, 0x62, 0x1d, 0x56, 0xa6, 0x90, 0x35, 0xd9, 0x56, 0x97,
	0xdb, 0xed, 0xbf, 0x75, 0xd5, 0xd8, 0x1b, 0xd8, 0x86, 0x30, 0x2c, 0x47, 0x6a, 0xe5, 0xbc, 0x26,
	0xf7, 0x1c, 0xb6, 0x0d, 0xf6, 0x6d, 0x69, 0xd3, 0xe0, 0xa6, 0xf4, 0xc9, 0xdf, 0x21, 0x8c, 0x98,
	0x36, 0xf2, 0xc5, 0xd5, 0x35, 0x9e, 0x81, 0x5f, 0x2f, 0x2c, 0x1e, 0x68, 0xda, 0xce, 0x9a, 0x87,
	0x13, 0x27, 0x6a, 0x0c, 0xf1, 0x00, 0xdf, 0xc3, 0xd8, 0xda, 0x3d, 0x3c, 0xd2, 0x75, 0xfd, 0x6d,
	0x0c, 0x8f, 0x3a, 0xde, 0x6a, 0x6d, 0x58, 0x41, 0x58, 0x9b, 0x6f, 0x20, 0xfa, 0x5e, 0xd8, 0x04,
	0xf1, 0x01, 0xc6, 0xd6, 0x58, 0x0d, 0x44, 0x7f, 0x25, 0xc2, 0xa0, 0x9f, 0x68, 0x94, 0x24, 0xb0,
	0xdb, 0x9d, 0x2c, 0x86, 0x16, 0x13, 0x17, 0x69, 0x03, 0x99, 0xcf, 0xb0, 0xdb, 0x99, 0xb0, 0xc4,
	0xa7, 0xd6, 0xab, 0x74, 0xc7, 0x7e, 0xc7, 0xbb, 0x58, 0x1e, 0xc4, 0xc3, 0x9a, 0x7b, 0xd7, 0x10,
	0xad, 0x26, 0xd7, 0xad, 0xb6, 0xa6, 0x06, 0xc5, 0xd6, 0xe4, 0x58, 0xf3, 0x5e, 0x9a, 0x1a, 0x20,
	0x5b, 0x93, 0xc3, 0xe8, 0x76, 0x9c, 0xf9, 0x96, 0xfe, 0x23, 0x9c, 0xfe, 0x0b, 0x00, 0x00, 0xff,
	0xff, 0x4c, 0x65, 0x35, 0xe9, 0x46, 0x06, 0x00, 0x00,
}
